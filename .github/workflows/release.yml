name: Release

on:
  push:
    branches:
      - master

jobs:
  release:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu

    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - run: nix develop --impure -c bash -c "cargo build --release --target ${{ matrix.target }}"
      - run: tar czf "basmati-${{ matrix.target }}.tar.gz" target
      - run: |
          VERSION=$(grep '^version = ' Cargo.toml | cut -d '"' -f2)
          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV
      - run: |
          echo "ASSET_PATH=basmati-${{ matrix.target }}.tar.gz" >> $GITHUB_ENV
          echo "ASSET_NAME=basmati-${{ matrix.target }}.tar.gz" >> $GITHUB_ENV

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ASSET_NAME }}
          path: ${{ env.ASSET_PATH }}

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.ASSET_PATH }}
          draft: false
          prerelease: false
          tag_name: v${{ env.RELEASE_VERSION }}
          name: Release v${{ env.RELEASE_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

